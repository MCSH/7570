#
#  Panoramix v4 Oct 2019 
#  Decompiled source of 0xC66eA802717bFb9833400264Dd12c2bCeAa34a6d
# 
#  Let's make the world open source 
# 
#
#  I failed with these: 
#  - _fallback()
#  All the rest is below.
#

def storage:
  stor0 is uint256 at storage 0
  unknownc2205ee1Address is addr at storage 0 offset 8
  stor0 is uint256 at storage 0 offset 8
  unknownd551f601 is uint8 at storage 0
  stor1 is uint256 at storage 1
  controllerAddress is addr at storage 1

def getController() payable: 
  return addr(controllerAddress)

def unknownc2205ee1() payable: 
  return unknownc2205ee1Address

def unknownd551f601() payable: 
  return unknownd551f601

#
#  Regular functions
#

def totalSupply() payable: 
  call addr(controllerAddress).totalSupply() with:
       gas gas_remaining - 25050 wei
  require ext_call.success
  return ext_call.return_data[0]

def balanceOf(address _owner) payable: 
  call addr(controllerAddress).balanceOf(address owner) with:
       gas gas_remaining - 25050 wei
      args _owner
  require ext_call.success
  return ext_call.return_data[0]

def allowance(address _owner, address _spender) payable: 
  call addr(controllerAddress).allowance(address owner, address spender) with:
       gas gas_remaining - 25050 wei
      args addr(_owner), _spender
  require ext_call.success
  return ext_call.return_data[0]

def transfer(address _to, uint256 _value) payable: 
  call addr(controllerAddress).transfer(address tokenAddress, address to, uint256 amount) with:
       gas gas_remaining - 25050 wei
      args caller, addr(_to), _value
  require ext_call.success
  return ext_call.return_data[0]

def approve(address _spender, uint256 _value) payable: 
  call addr(controllerAddress).approve(address owner, address spender, uint256 value) with:
       gas gas_remaining - 25050 wei
      args caller, addr(_spender), _value
  require ext_call.success
  return ext_call.return_data[0]

def transferFrom(address _from, address _to, uint256 _value) payable: 
  call addr(controllerAddress).transferFrom(address spender, address from, address to, uint256 value) with:
       gas gas_remaining - 25050 wei
      args 0, uint32(caller), addr(_from), addr(_to), _value
  require ext_call.success
  return ext_call.return_data[0]

def setController(address _c) payable: 
  if unknownd551f601:
      require unknownd551f601 == 1
      call unknownc2205ee1Address.canCall(address src, address dst, bytes4 sig) with:
           gas gas_remaining - 25050 wei
          args caller, addr(this.address), call.func_hash
      require ext_call.success
      require ext_call.return_data[0]
      uint256(stor1) = _c or Mask(96, 160, uint256(stor1))
      stop
  else:
      require caller == unknownc2205ee1Address
      uint256(stor1) = _c or Mask(96, 160, uint256(stor1))
      stop

def emitTransfer(address _from, address _to, uint256 _value) payable: 
  if unknownd551f601:
      require unknownd551f601 == 1
      call unknownc2205ee1Address.canCall(address src, address dst, bytes4 sig) with:
           gas gas_remaining - 25050 wei
          args caller, addr(this.address), call.func_hash
      require ext_call.success
      require ext_call.return_data[0]
      log Transfer(
            address from=_value,
            address to=_from,
            uint256 value=_to)
      stop
  else:
      require caller == unknownc2205ee1Address
      log Transfer(
            address from=_value,
            address to=_from,
            uint256 value=_to)
      stop

def emitApproval(address _owner, address _spender, uint256 _value) payable: 
  if unknownd551f601:
      require unknownd551f601 == 1
      call unknownc2205ee1Address.canCall(address src, address dst, bytes4 sig) with:
           gas gas_remaining - 25050 wei
          args caller, addr(this.address), call.func_hash
      require ext_call.success
      require ext_call.return_data[0]
      log Approval(
            address owner=_value,
            address spender=_owner,
            uint256 value=_spender)
      stop
  else:
      require caller == unknownc2205ee1Address
      log Approval(
            address owner=_value,
            address spender=_owner,
            uint256 value=_spender)
      stop

def unknown7e1db2a1(uint256 _param1, uint256 _param2) payable: 
  if unknownd551f601:
      require unknownd551f601 == 1
      call unknownc2205ee1Address.canCall(address src, address dst, bytes4 sig) with:
           gas gas_remaining - 25050 wei
          args caller, addr(this.address), call.func_hash
      require ext_call.success
      require ext_call.return_data[0]
      Mask(248, 0, stor0.field_8) = Mask(248, 0, _param1)
      uint256(stor0.field_0) = _param2 or Mask(248, 8, uint256(stor0.field_0))
      log 0xb96a5204: addr(_param1), _param2
      stop
  else:
      require caller == unknownc2205ee1Address
      Mask(248, 0, stor0.field_8) = Mask(248, 0, _param1)
      uint256(stor0.field_0) = _param2 or Mask(248, 8, uint256(stor0.field_0))
      log 0xb96a5204: addr(_param1), _param2
      stop

