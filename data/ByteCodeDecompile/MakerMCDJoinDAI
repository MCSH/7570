#
#  Panoramix v4 Oct 2019 
#  Decompiled source of 0x9759A6Ac90977b93B58547b4A71c78317f391A28
# 
#  Let's make the world open source 
# 

def storage:
  unknownbf353dbb is mapping of uint256 at storage 0
  unknown36569e77Address is addr at storage 1
  daiAddress is addr at storage 2
  live is uint256 at storage 3

def unknown36569e77() payable: 
  return unknown36569e77Address

def live() payable: 
  return live

def unknownbf353dbb(addr _param1) payable: 
  require calldata.size - 4 >= 32
  return unknownbf353dbb[_param1]

def dai() payable: 
  return daiAddress

#
#  Regular functions
#

def _fallback() payable: # default function
  revert

def cage() payable: 
  if unknownbf353dbb[caller] != 1:
      revert with 0, 'DaiJoin/not-authorized'
  live = 0
  log 0x0: 32, 224, call.data1, _param2

def deny(address _operator) payable: 
  require calldata.size - 4 >= 32
  if unknownbf353dbb[caller] != 1:
      revert with 0, 'DaiJoin/not-authorized'
  unknownbf353dbb[addr(_operator)] = 0
  log 0x0: 32, 224, call.data

def unknown65fae35e(addr _param1, uint256 _param2) payable: 
  require calldata.size - 4 >= 32
  if unknownbf353dbb[caller] != 1:
      revert with 0, 'DaiJoin/not-authorized'
  unknownbf353dbb[addr(_param1)] = 1
  log 0x0: 32, 224, call.data1, _param2

def unknown3b4da69f(addr _param1, uint256 _param2) payable: 
  require calldata.size - 4 >= 64
  if not _param2:
      require ext_code.size(unknown36569e77Address)
      call unknown36569e77Address.move(address src, address dst, uint256 wad) with:
           gas gas_remaining wei
          args addr(this.address), addr(_param1), 0
  else:
      require _param2
      require 1000000000 * 10^18 * _param2 / _param2 == 1000000000 * 10^18
      require ext_code.size(unknown36569e77Address)
      call unknown36569e77Address.move(address src, address dst, uint256 wad) with:
           gas gas_remaining wei
          args addr(this.address), addr(_param1), 1000000000 * 10^18 * _param2
  if not ext_call.success:
      revert with ext_call.return_data[0 len return_data.size]
  require ext_code.size(daiAddress)
  call daiAddress.burn(address guy, uint256 wad) with:
       gas gas_remaining wei
      args caller, _param2
  if not ext_call.success:
      revert with ext_call.return_data[0 len return_data.size]
  log 0x0: 32, 224, call.data1, _param2

def unknownef693bed(addr _param1, uint256 _param2) payable: 
  require calldata.size - 4 >= 64
  if live != 1:
      revert with 0, 'DaiJoin/not-live'
  if not _param2:
      require ext_code.size(unknown36569e77Address)
      call unknown36569e77Address.move(address src, address dst, uint256 wad) with:
           gas gas_remaining wei
          args caller, addr(this.address), 0
  else:
      require _param2
      require 1000000000 * 10^18 * _param2 / _param2 == 1000000000 * 10^18
      require ext_code.size(unknown36569e77Address)
      call unknown36569e77Address.move(address src, address dst, uint256 wad) with:
           gas gas_remaining wei
          args caller, addr(this.address), 1000000000 * 10^18 * _param2
  if not ext_call.success:
      revert with ext_call.return_data[0 len return_data.size]
  require ext_code.size(daiAddress)
  call daiAddress.mint(address to, uint256 amount) with:
       gas gas_remaining wei
      args addr(_param1), _param2
  if not ext_call.success:
      revert with ext_call.return_data[0 len return_data.size]
  log 0x0: 32, 224, call.data1, _param2

