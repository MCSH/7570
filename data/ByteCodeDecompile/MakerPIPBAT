#
#  Panoramix v4 Oct 2019 
#  Decompiled source of 0x81FE72B5A8d1A857d176C3E7d5Bd2679A9B85763
# 
#  Let's make the world open source 
# 

def storage:
  unknownbf353dbb is mapping of uint256 at storage 0
  stopped is uint256 at storage 1
  zzz is uint64 at storage 2 offset 176
  hop is uint16 at storage 2 offset 160
  srcAddress is addr at storage 2
  read is uint128 at storage 3
  stor3 is uint128 at storage 3 offset 128
  stor4 is uint128 at storage 4 offset 128
  stor4 is bool at storage 4 offset 256
  stor4 is uint128 at storage 4
  stor4 is uint8 at storage 4 offset 128
  stor4 is uint128 at storage 4 offset 136
  unknown4fce7a2a is mapping of uint256 at storage 5

def src() payable: 
  return srcAddress

def unknown4fce7a2a(addr _param1) payable: 
  require calldata.size - 4 >= 32
  return unknown4fce7a2a[_param1]

def read() payable: 
  if unknown4fce7a2a[caller] != 1:
      revert with 0, 'OSM/contract-not-whitelisted'
  if stor3 != 1:
      revert with 0, 'OSM/no-current-value'
  return read

def stopped() payable: 
  return stopped

def zzz() payable: 
  return zzz

def hop() payable: 
  return hop

def unknownbf353dbb(addr _param1) payable: 
  require calldata.size - 4 >= 32
  return unknownbf353dbb[_param1]

#
#  Regular functions
#

def _fallback() payable: # default function
  revert

def peek() payable: 
  if unknown4fce7a2a[caller] != 1:
      revert with 0, 'OSM/contract-not-whitelisted'
  return read, 1 == stor3

def pass() payable: 
  require uint64(hop + zzz) >= zzz
  return block.timestamp >= uint64(hop + zzz)

def stop() payable: 
  if unknownbf353dbb[caller] != 1:
      revert with 0, 32, 18, 0xfe4f534d2f6e6f742d617574686f72697a656400000000000000000000000000
  stopped = 1
  log call.func_hash: 32, 224, call.data1, _param2

def start() payable: 
  if unknownbf353dbb[caller] != 1:
      revert with 0, 32, 18, 0xfe4f534d2f6e6f742d617574686f72697a656400000000000000000000000000
  stopped = 0
  log call.func_hash: 32, 224, call.data1, _param2

def peep() payable: 
  if unknown4fce7a2a[caller] != 1:
      revert with 0, 'OSM/contract-not-whitelisted'
  return uint128(stor4.field_0), 1 == uint128(stor4.field_128)

def step(uint16 _ts) payable: 
  require calldata.size - 4 >= 32
  if unknownbf353dbb[caller] != 1:
      revert with 0, 32, 18, 0xfe4f534d2f6e6f742d617574686f72697a656400000000000000000000000000
  if _ts <= 0:
      revert with 0, 'OSM/ts-is-zero'
  hop = _ts

def change(address _toToken) payable: 
  require calldata.size - 4 >= 32
  if unknownbf353dbb[caller] != 1:
      revert with 0, 32, 18, 0xfe4f534d2f6e6f742d617574686f72697a656400000000000000000000000000
  srcAddress = _toToken
  log call.func_hash: 32, 224, call.data

def deny(address _operator) payable: 
  require calldata.size - 4 >= 32
  if unknownbf353dbb[caller] != 1:
      revert with 0, 32, 18, 0xfe4f534d2f6e6f742d617574686f72697a656400000000000000000000000000
  unknownbf353dbb[addr(_operator)] = 0
  log call.func_hash: 32, 224, call.data

def unknown65c4ce7a(addr _param1, uint256 _param2) payable: 
  require calldata.size - 4 >= 32
  if unknownbf353dbb[caller] != 1:
      revert with 0, 32, 18, 0xfe4f534d2f6e6f742d617574686f72697a656400000000000000000000000000
  unknown4fce7a2a[addr(_param1)] = 0
  log call.func_hash: 32, 224, call.data1, _param2

def unknown65fae35e(addr _param1, uint256 _param2) payable: 
  require calldata.size - 4 >= 32
  if unknownbf353dbb[caller] != 1:
      revert with 0, 32, 18, 0xfe4f534d2f6e6f742d617574686f72697a656400000000000000000000000000
  unknownbf353dbb[addr(_param1)] = 1
  log call.func_hash: 32, 224, call.data1, _param2

def unknownf29c29c4(addr _param1, uint256 _param2) payable: 
  require calldata.size - 4 >= 32
  if unknownbf353dbb[caller] != 1:
      revert with 0, 32, 18, 0xfe4f534d2f6e6f742d617574686f72697a656400000000000000000000000000
  if not _param1:
      revert with 0, 'OSM/no-contract-0'
  unknown4fce7a2a[addr(_param1)] = 1
  log call.func_hash: 32, 224, call.data1, _param2

def void() payable: 
  if unknownbf353dbb[caller] != 1:
      revert with 0, 32, 18, 0xfe4f534d2f6e6f742d617574686f72697a656400000000000000000000000000
  uint128(stor4.field_0) = 0
  stor4.field_256 % 1 = 0
  uint128(stor4.field_128) = 0
  stor4.field_256 % 1 = 0
  read = uint128(stor4.field_0)
  read = uint128(stor4.field_0)
  stor3 = uint128(stor4.field_128)
  stopped = 1
  log call.func_hash: 32, 224, call.data1, _param2

def unknown46d4577d() payable: 
  require calldata.size - 4 >= 32
  require cd <= 4294967296
  require cd <= calldata.size
  require ('cd', 4).length <= 4294967296 and cd * ('cd', 4).length) + 36 <= calldata.size
  if unknownbf353dbb[caller] != 1:
      revert with 0, 32, 18, 0xfe4f534d2f6e6f742d617574686f72697a656400000000000000000000000000
  idx = 0
  while idx < ('cd', 4).length:
      mem[0] = addr(cd[((32 * idx) + cd)
      mem[32] = 5
      unknown4fce7a2a[addr(cd[((32 * idx) + cd)] = 0
      idx = idx + 1
      continue 
  log call.func_hash: 32, 224, call.data

def unknown1b25b65f() payable: 
  require calldata.size - 4 >= 32
  require cd <= 4294967296
  require cd <= calldata.size
  require ('cd', 4).length <= 4294967296 and cd * ('cd', 4).length) + 36 <= calldata.size
  if unknownbf353dbb[caller] != 1:
      revert with 0, 32, 18, 0xfe4f534d2f6e6f742d617574686f72697a656400000000000000000000000000
  idx = 0
  while idx < ('cd', 4).length:
      if not addr(cd[((32 * idx) + cd):
          revert with 0, 'OSM/no-contract-0'
      require idx < ('cd', 4).length
      mem[0] = addr(cd[((32 * idx) + cd)
      mem[32] = 5
      unknown4fce7a2a[addr(cd[((32 * idx) + cd)] = 1
      idx = idx + 1
      continue 
  log call.func_hash: 32, 224, call.data

def poke() payable: 
  if stopped:
      revert with 0, 'OSM/is-stopped'
  require uint64(hop + zzz) >= zzz
  if block.timestamp < uint64(hop + zzz):
      revert with 0, 'OSM/not-passed'
  require ext_code.size(srcAddress)
  static call srcAddress.peek() with:
          gas gas_remaining wei
  if not ext_call.success:
      revert with ext_call.return_data[0 len return_data.size]
  require return_data.size >= 64
  if ext_call.return_data[32]:
      read = uint128(stor4.field_0)
      stor3 = uint128(stor4.field_128)
      uint128(stor4.field_0) = uint128(ext_call.return_data)
      uint8(stor4.field_128) = 1
      Mask(120, 0, stor4.field_136) = 0
      if not hop:
          revert with 0, 'OSM/hop-is-zero'
      zzz = uint64(block.timestamp - (block.timestamp % hop))
      log LogValue(bytes32 val=read)
  log call.func_hash: 32, 224, call.data1, _param2

